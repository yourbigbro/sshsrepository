<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>maven_ssh3-web</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- 注意，在分模块开发时，只有web层里面才有这个web.xml配置文件 -->

<!-- 该文件中唯独没有hibernate相关的元素，以为它既不是全局的也不是入口 -->
<!-- 这个监听的是spring(由两个元素组成) -->
<listener>
<!-- 这个用ctrl+shift+t找到 -->
<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
</listener>
<context-param>
	<!-- contextConfigLocation在ContextLoaderListener的父类里面找到(通过一个变量字符串) -->
	<param-name>contextConfigLocation</param-name>
	<!-- classpath后面的*可以让项目加载jar包中的相应配置文件 -->
	<param-value>classpath*:applicationContext-*.xml</param-value>
</context-param>

<!-- 这个是struts2的入口(也是由两个元素组成) -->
<filter>
<filter-name>struts2</filter-name>
<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
</filter>
<filter-mapping>
<filter-name>struts2</filter-name>
<url-pattern>/*</url-pattern>
</filter-mapping>
  
</web-app>